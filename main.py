import os
import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, ContentType, InlineKeyboardMarkup, InlineKeyboardButton
from flask import Flask
from threading import Thread

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")
CHANNEL_ID = os.getenv("CHANNEL_ID")
BOT_USERNAME = "Office_GPTUA_bot"  # –í–∫–∞–∂—ñ—Ç—å —Ç—É—Ç —ñ–º'—è –≤–∞—à–æ–≥–æ –±–æ—Ç–∞

if not BOT_TOKEN or not ADMIN_ID or not CHANNEL_ID:
    raise ValueError("–¢–æ–∫–µ–Ω –±–æ—Ç–∞, ID –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∞–±–æ ID –∫–∞–Ω–∞–ª—É –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞!")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ—Å—Ç—É
def generate_post_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üíå –ù–∞–ø–∏—Å–∞—Ç–∏ –∞–≤—Ç–æ—Ä—É", url=f"https://t.me/{BOT_USERNAME}?start=contact_author")]
    ])

# –ü—Ä–∏–π–æ–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
@dp.message(F.content_type.in_({ContentType.TEXT, ContentType.PHOTO, ContentType.VIDEO, ContentType.DOCUMENT}))
async def handle_news(message: Message):
    if message.content_type == ContentType.PHOTO:
        await bot.send_photo(
            CHANNEL_ID,
            photo=message.photo[-1].file_id,
            caption=message.caption or "–ù–æ–≤–∏–Ω–∞ –±–µ–∑ —Ç–µ–∫—Å—Ç—É",
            reply_markup=generate_post_keyboard()
        )
    elif message.content_type == ContentType.VIDEO:
        await bot.send_video(
            CHANNEL_ID,
            video=message.video.file_id,
            caption=message.caption or "–ù–æ–≤–∏–Ω–∞ –±–µ–∑ —Ç–µ–∫—Å—Ç—É",
            reply_markup=generate_post_keyboard()
        )
    elif message.content_type == ContentType.DOCUMENT:
        await bot.send_document(
            CHANNEL_ID,
            document=message.document.file_id,
            caption=message.caption or "–ù–æ–≤–∏–Ω–∞ –±–µ–∑ —Ç–µ–∫—Å—Ç—É",
            reply_markup=generate_post_keyboard()
        )
    else:
        await bot.send_message(
            CHANNEL_ID,
            text=message.text or "–ù–æ–≤–∏–Ω–∞ –±–µ–∑ —Ç–µ–∫—Å—Ç—É",
            reply_markup=generate_post_keyboard()
        )

    await message.answer("‚úÖ –í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ –∑ –∫–Ω–æ–ø–∫–æ—é!")

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

# Flask —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
app = Flask(__name__)

@app.route("/")
def home():
    return "Bot is running!"

def run_flask():
    app.run(host="0.0.0.0", port=8080)

if __name__ == "__main__":
    Thread(target=run_flask).start()
    asyncio.run(main())
